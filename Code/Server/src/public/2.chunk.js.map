{"version":3,"sources":["E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting-routing.module.ts","E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting.component.html","E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting.component.ts","E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting.module.ts","E:/Mini-Projects/Corssover/Code/Client/src/app/shared/global-validators.ts"],"names":[],"mappings":"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","file":"2.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { PostingComponent } from './posting.component';\r\n\r\nconst routes: Routes = [\r\n    { path: ' ', component: PostingComponent },\r\n    { path: '**', component: PostingComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PostingRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting-routing.module.ts","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n    <h1 *ngIf=\\\"isEdit\\\">Edit you info</h1>\\r\\n    <h1 *ngIf=\\\"!isEdit\\\">Add you info</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            \\r\\n                <form (ngSubmit)=\\\"onSubmit(form.value)\\\" [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">First name </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter your first name\\\" formControlName=\\\"firstName\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Last name </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter your last name\\\" formControlName=\\\"lastName\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Email Address </label>\\r\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter email address\\\" formControlName=\\\"email\\\">\\r\\n                            <p *ngIf=\\\"form\\\" [hidden]=\\\"!isIncorrectMailFormat('email')\\\" class=\\\"text-danger\\\"> Please Enter a valid email </p>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Phone Number </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter phone number\\\" formControlName=\\\"telephone\\\" required>\\r\\n                            <p *ngIf=\\\"form\\\" [hidden]=\\\"!isIncorrectTelephoneFormat('telephone')\\\" class=\\\"text-danger\\\"> Please Enter a valid phone number</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Blood Group </label>\\r\\n                            <select class=\\\"form-control bg-white xs-inline loadServices\\\" formControlName=\\\"bloodGroup\\\">\\r\\n                                        <option *ngFor=\\\"let item of bloodGroups\\\" value=\\\"{{item}}\\\">{{item}}</option>\\r\\n                                </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Longitude </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Latitude </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">Address </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"address\\\">\\r\\n                        </div>\\r\\n                    \\r\\n                    \\r\\n                    \\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\"> Submit</button>\\r\\n                        <div class=\\\"btn btn-warning\\\" (click)=\\\"onChangeLocationRequest()\\\">Get Back to Map</div>\\r\\n                        <div class=\\\"btn btn-danger\\\" *ngIf=\\\"infoService.userId\\\" (click)=\\\"onRemove()\\\">Remove My Posting</div>\\r\\n                    \\r\\n                    </form>\\r\\n                <hr />\\r\\n                \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting.component.html\n// module id = ../../../../../src/app/posting/posting.component.html\n// module chunks = 2","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService } from '../shared/services/data.service';\r\nimport { InfoService } from '../shared/services/info.service';\r\nimport { Component, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { globalValidators } from '../shared/global-validators';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\n\r\n@Component({\r\n    selector: 'posting',\r\n    templateUrl: 'posting.component.html',\r\n})\r\nexport class PostingComponent {\r\n    isEdit: boolean\r\n    form: FormGroup\r\n    bloodGroups = ['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-']\r\n\r\n    constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute,\r\n        private dataService: DataService, private router: Router, private infoService: InfoService,\r\n        private sb: SnackBarService) { \r\n            this.grabIdAndGetInfo()\r\n        }\r\n\r\n    grabIdAndGetInfo(){\r\n        if(this.activatedRoute.snapshot.url[0]){\r\n            this.isEdit =true\r\n            this.getDonorInfo(this.activatedRoute.snapshot.url[0].path)\r\n        }\r\n        else if(this.infoService.userId){\r\n            this.isEdit =true\r\n            this.buildForm()\r\n        } else {\r\n            this.isEdit =false\r\n            this.buildForm()\r\n        }\r\n        \r\n        \r\n    \r\n    }\r\n  \r\n    private getDonorInfo(id) {\r\n        console.log(id);\r\n        this.dataService.getDonorInfo(id).subscribe(\r\n            data => {\r\n                \r\n                \r\n                this.infoService.userId = id\r\n                this.infoService.userData = data\r\n                this.buildForm()\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                \r\n                this.sb.emitErrorSnackBar(\"This account is currently non-existant\")\r\n                this.router.navigate(['/map'])\r\n            }\r\n        )\r\n    }\r\n\r\n    onRemove(){\r\n        return this.dataService.deleteDonor(this.infoService.userId).subscribe(\r\n            data => {\r\n                this.infoService.clearData()\r\n                this.form.reset()\r\n                this.sb.emitSuccessSnackBar(\"You have successfully deleted your info\")\r\n                this.router.navigate(['/map'])\r\n            },\r\n            error => console.log(error)\r\n        )\r\n    }\r\n    onSubmit(formData) {\r\n        if (this.infoService.userId) return this.dataService.updateDonor(this.infoService.userId, formData).subscribe(\r\n            success => {\r\n                this.router.navigate(['/success'])\r\n            },\r\n            error => console.log(error)\r\n        )\r\n        else return this.dataService.addDonor(formData).subscribe(\r\n            data => {\r\n                this.infoService.userId = data._id\r\n                this.router.navigate(['/success'])\r\n            },\r\n            error => console.log(error)\r\n        )\r\n    }\r\n\r\n\r\n    onChangeLocationRequest() {\r\n        this.router.navigate(['/map'])\r\n    }\r\n\r\n\r\n    buildForm() {\r\n\r\n        if (this.infoService.userData){\r\n            this.form = this.fb.group({\r\n                firstName: [this.infoService.userData.firstName || '', Validators.required],\r\n                lastName: [this.infoService.userData.lastName || '', Validators.required],\r\n                email: [this.infoService.userData.email || '', globalValidators.mailFormat],\r\n                telephone: [this.infoService.userData.telephone || '', globalValidators.telephoneFormat],\r\n                bloodGroup: [this.infoService.userData.bloodGroup || '', Validators.required],\r\n                longitude: [this.infoService.userData.longitude || '', Validators.required],\r\n                latitude: [this.infoService.userData.latitude || '', Validators.required],\r\n                address: [this.infoService.userData.address || '',Validators.required],\r\n            })\r\n        }\r\n        else {  \r\n            this.form = this.fb.group({\r\n                firstName: [  '', Validators.required],\r\n                lastName: [ '', Validators.required],\r\n                email: ['', globalValidators.mailFormat],\r\n                telephone: [  '', globalValidators.telephoneFormat],\r\n                bloodGroup: ['', Validators.required],\r\n                longitude: [  '', Validators.required],\r\n                latitude: [ '', Validators.required],\r\n                address: ['',Validators.required],\r\n            })\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    isIncorrectMailFormat(control) {\r\n        return this.form.get(control).hasError('incorrectMailFormat')\r\n    }\r\n    isIncorrectTelephoneFormat(control) {\r\n        return this.form.get(control).hasError('incorrectTelephoneFormat')\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting.component.ts","// Angular Imports\r\nimport { NgModule } from '@angular/core';\r\n\r\n// This Module's Components\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PostingRoutingModule } from './posting-routing.module';\r\nimport { PostingComponent } from './posting.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        PostingRoutingModule,\r\n        SharedModule,\r\n    ],\r\n    declarations: [\r\n        PostingComponent,\r\n    ],\r\n    \r\n})\r\nexport class PostingModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Mini-Projects/Corssover/Code/Client/src/app/posting/posting.module.ts","\r\nexport const globalValidators = {\r\n    mailFormat(control): ValidationResult {\r\n       var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n       if (control.value != \"\" && (control.value.length <= 5 || !EMAIL_REGEXP.test(control.value))) {\r\n           return { \"incorrectMailFormat\": true };\r\n       }\r\n       return null;\r\n   },\r\n\r\n   telephoneFormat(control): ValidationResult {\r\nvar PHONE_REGEXP = /(00|\\+)\\d{12}$/i;\r\nif (control.value != \"\" && (control.value.length <= 5 || !PHONE_REGEXP.test(control.value))) {\r\n        return { \"incorrectTelephoneFormat\": true };\r\n    }\r\n    return null;\r\n}\r\n}\r\n\r\ninterface ValidationResult {\r\n   [key: string]: boolean;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Mini-Projects/Corssover/Code/Client/src/app/shared/global-validators.ts"],"sourceRoot":"webpack:///"}