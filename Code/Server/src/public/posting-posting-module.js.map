{"version":3,"sources":["webpack:///./src/app/posting/posting-routing.module.ts","webpack:///./src/app/posting/posting.component.html","webpack:///./src/app/posting/posting.component.ts","webpack:///./src/app/posting/posting.module.ts","webpack:///./src/app/shared/global-validators.ts"],"names":[],"mappings":"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","file":"posting-posting-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { PostingComponent } from './posting.component';\r\n\r\nconst routes: Routes = [\r\n    { path: ' ', component: PostingComponent },\r\n    { path: '**', component: PostingComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PostingRoutingModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 *ngIf=\\\"isEdit\\\">Edit you info</h1>\\r\\n    <h1 *ngIf=\\\"!isEdit\\\">Add you info</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <form (ngSubmit)=\\\"onSubmit(form.value)\\\" [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">First name </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter your first name\\\" formControlName=\\\"firstName\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Last name </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter your last name\\\" formControlName=\\\"lastName\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Email Address </label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter email address\\\" formControlName=\\\"email\\\">\\r\\n                    <p [hidden]=\\\"!isIncorrectMailFormat('email')\\\" class=\\\"text-danger\\\"> Please Enter a valid email </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Phone Number </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter phone number\\\" formControlName=\\\"telephone\\\" required>\\r\\n                    <p [hidden]=\\\"!isIncorrectTelephoneFormat('telephone')\\\" class=\\\"text-danger\\\"> Please Enter a valid phone number</p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Blood Group </label>\\r\\n                    <select class=\\\"form-control bg-white xs-inline loadServices\\\" formControlName=\\\"bloodGroup\\\">\\r\\n                                        <option *ngFor=\\\"let item of bloodGroups\\\" value=\\\"{{item}}\\\">{{item}}</option>\\r\\n                                </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Longitude </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n                    <p [hidden]=\\\"!isIncorrectLongitudeFormat('longitude')\\\" class=\\\"text-danger\\\"> Please Enter a valid longitude </p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Latitude </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n                    <p [hidden]=\\\"!isIncorrectLatitudeFormat('latitude')\\\" class=\\\"text-danger\\\"> Please Enter a valid latitude </p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Address </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"address\\\" >\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!form.valid\\\"> Submit</button>\\r\\n                <div class=\\\"btn btn-info ml-3 link\\\" (click)=\\\"onChangeLocationRequest()\\\">Get Back to Map</div>\\r\\n                <div class=\\\"btn btn-danger ml-3 link\\\" *ngIf=\\\"userService.userId\\\" (click)=\\\"onRemove()\\\">Remove My Posting</div>\\r\\n\\r\\n            </form>\\r\\n            <hr />\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService } from '../shared/services/data.service';\r\nimport { UserService } from '../shared/services/user.service';\r\nimport { Component, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { globalValidators } from '../shared/global-validators';\r\nimport { SnackBarService } from '../shared/services/snackbar.service';\r\n\r\n@Component({\r\n    selector: 'posting',\r\n    templateUrl: 'posting.component.html',\r\n})\r\nexport class PostingComponent {\r\n    isEdit: boolean\r\n    form: FormGroup\r\n    bloodGroups = ['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-']\r\n\r\n    constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute,\r\n        private dataService: DataService, private router: Router, public userService: UserService,\r\n        private sb: SnackBarService) {\r\n            this.grabIdAndGetInfo()\r\n        }\r\n\r\n    grabIdAndGetInfo(){\r\n        if(this.activatedRoute.snapshot.url[0]){\r\n            this.isEdit =true\r\n            this.getDonorInfo(this.activatedRoute.snapshot.url[0].path)\r\n        }\r\n        else if(this.userService.userId){\r\n            this.isEdit =true\r\n            this.buildForm()\r\n        } else {\r\n            this.isEdit =false\r\n            this.buildForm()\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private getDonorInfo(id) {\r\n        this.dataService.getDonorInfo(id).subscribe(\r\n            data => {\r\n                this.userService.userId = id\r\n                this.userService.userData = data\r\n                this.buildForm()\r\n            },\r\n            error => {\r\n                this.sb.emitErrorSnackBar(\"This account is currently non-existant\")\r\n                this.router.navigate(['/map'])\r\n            }\r\n        )\r\n    }\r\n\r\n    onRemove(){\r\n        return this.dataService.deleteDonor(this.userService.userId).subscribe(\r\n            data => {\r\n                this.userService.clearData()\r\n                this.form.reset()\r\n                this.sb.emitSuccessSnackBar(\"You have successfully deleted your info\")\r\n                this.router.navigate(['/map'])\r\n            },\r\n            error => console.log(error)\r\n        )\r\n    }\r\n    onSubmit(formData) {\r\n        if (this.userService.userId) return this.dataService.updateDonor(this.userService.userId, formData).subscribe(\r\n            success => {\r\n                this.router.navigate(['/success'])\r\n            },\r\n            error => console.log(error)\r\n        )\r\n        else return this.dataService.addDonor(formData).subscribe(\r\n            data => {\r\n                this.userService.userId = data._id\r\n                this.router.navigate(['/success'])\r\n            },\r\n            error => console.log(error)\r\n        )\r\n    }\r\n\r\n\r\n    onChangeLocationRequest() {\r\n        this.router.navigate(['/map'])\r\n    }\r\n\r\n\r\n    buildForm() {\r\n\r\n        if (this.userService.userData){\r\n            this.form = this.fb.group({\r\n                firstName: [this.userService.userData.firstName || '', Validators.required],\r\n                lastName: [this.userService.userData.lastName || '', Validators.required],\r\n                email: [this.userService.userData.email || '', globalValidators.mailFormat],\r\n                telephone: [this.userService.userData.telephone || '', globalValidators.telephoneFormat],\r\n                bloodGroup: [this.userService.userData.bloodGroup || '', Validators.required],\r\n                longitude: [this.userService.userData.longitude || '', globalValidators.longitudeFormat],\r\n                latitude: [this.userService.userData.latitude || '', globalValidators.latitudeFormat],\r\n                address: [this.userService.userData.address || '',Validators.required],\r\n            })\r\n        }\r\n        else {\r\n            this.form = this.fb.group({\r\n                firstName: [  '', Validators.required],\r\n                lastName: [ '', Validators.required],\r\n                email: ['', globalValidators.mailFormat],\r\n                telephone: [  '', globalValidators.telephoneFormat],\r\n                bloodGroup: ['', Validators.required],\r\n                longitude: [  '', globalValidators.longitudeFormat],\r\n                latitude: [ '', globalValidators.latitudeFormat],\r\n                address: ['',Validators.required],\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    isIncorrectMailFormat(control) {\r\n        return this.form.get(control).hasError('incorrectMailFormat')\r\n    }\r\n    isIncorrectTelephoneFormat(control) {\r\n        return this.form.get(control).hasError('incorrectTelephoneFormat')\r\n    }\r\n    isIncorrectLongitudeFormat(control) {\r\n        return this.form.get(control).hasError('incorrectLongitudeFormat')\r\n    }\r\n    isIncorrectLatitudeFormat(control) {\r\n        return this.form.get(control).hasError('incorrectLatitudeFormat')\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","// Angular Imports\r\nimport { NgModule } from '@angular/core';\r\n\r\n// This Module's Components\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PostingRoutingModule } from './posting-routing.module';\r\nimport { PostingComponent } from './posting.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        PostingRoutingModule,\r\n        SharedModule,\r\n    ],\r\n    declarations: [\r\n        PostingComponent,\r\n    ],\r\n    \r\n})\r\nexport class PostingModule {\r\n\r\n}\r\n","\r\nexport const globalValidators = {\r\n    mailFormat(control): ValidationResult {\r\n        var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n        if (control.value && control.value != \"\" && (control.value.length <= 5 || !EMAIL_REGEXP.test(control.value))) {\r\n            return { \"incorrectMailFormat\": true };\r\n        }\r\n        return null;\r\n    },\r\n\r\n    telephoneFormat(control): ValidationResult {\r\n        var REGEX = /(00|\\+)\\d{12}$/i;\r\n        if (control.value && control.value != \"\" && (control.value.length <= 5 || !REGEX.test(control.value))) {\r\n            return { \"incorrectTelephoneFormat\": true };\r\n        }\r\n        return null;\r\n    },\r\n\r\n    longitudeFormat(control): ValidationResult {\r\n        var REGEX = /^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,30})?))$/i;\r\n        if (control.value && control.value != \"\" &&  !REGEX.test(control.value)) {\r\n            return { \"incorrectLongitudeFormat\": true };\r\n        }\r\n        return null;\r\n    },\r\n\r\n    latitudeFormat(control): ValidationResult {\r\n        var REGEX = /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,30})?))$/i;\r\n        if (control.value && control.value != \"\" &&  !REGEX.test(control.value)) {\r\n            return { \"incorrectLatitudeFormat\": true };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\ninterface ValidationResult {\r\n    [key: string]: boolean;\r\n}\r\n\r\n"],"sourceRoot":""}